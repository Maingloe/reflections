lesson_2_reflections

Q: What happens when you initialize a repository? Why do you need to do it?

A: When you initialize a repository a .git subdirectory is created.
You need to create this so to receive all the meta-data that helps git perform the version control.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is different from the both the working directory and the repository because it is just a temporary place to hold files that will be in the next commit.
The value that this has is that it allows you to stage logical commits

Q: How can you use the staging area to make sure you have one commit per logical change?

A: Even if you have multiple changes on different files if they are all related you can add them all to the staging area at the same time for the same commit.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: Branches are great for experimentation.
They allow you to try new things without being afraid to ruin the main code.

Q: How do the diagrams help you visualize the branch structure?

A: You can see where each branch diverged as well as the parent child relationship of commits.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A: Merging two branches results in the commits from each branch being merged together into one branch. This merge is a commit with two parents.

Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

A: auto merging works in many situations and is much faster that manual merging.
Manual merging is necessary when auto merge fails due to conflicts.